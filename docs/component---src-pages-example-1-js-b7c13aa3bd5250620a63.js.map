{"version":3,"sources":["webpack:///./src/pages/example-1.js","webpack:///./src/components/UI/Checkbox/Checkbox.js","webpack:///./src/components/UI/Radio/Radio.js","webpack:///./src/components/CustomCheckoutForm.js"],"names":["MyStoreCheckout","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","react_stripe_elements_universal__WEBPACK_IMPORTED_MODULE_1__","apiKey","_components_CustomCheckoutForm__WEBPACK_IMPORTED_MODULE_4__","React","Component","StyledLabel","styled","label","withConfig","displayName","componentId","props","theme","utilities","borderRadius","checked","colors","primary","gray","StyledInput","input","Checkbox","Object","assign","COLORS","UTILITIES","react_default","disabled","name","onChange","type","value","children","defaultProps","withTheme","Radio","Radio_StyledLabel","Radio_StyledInput","SignupSchema","Yup","shape","donationAmount","required","firstName","min","max","lastName","email","StyledCardElement","CardElement","StyledFieldset","fieldset","StyledLegend","legend","CustomCheckoutForm","_React$Component","call","this","componentDidMount","window","Stripe","stripe","betas","handleSubmit","_callee","event","_ref","regenerator_default","wrap","_context","prev","next","preventDefault","handleCardPayment","StripeCardElement","sent","paymentIntent","error","stop","_this","formik_esm","initialValues","giftAid","paymentType","validationSchema","onSubmit","values","createToken","then","res","fetch","credentials","mode","headers","Accept","Content-Type","method","body","JSON","stringify","token","id","amount","response","ok","json","Error","data","alert","console","log","_ref2","errors","touched","handleChange","setFieldValue","Button","appearance","onClick","TextField","extraLeft","UI_Checkbox_Checkbox","phone","UI_Radio_Radio","Fragment","Label","ref","thisCardElement","injectStripe"],"mappings":"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","file":"component---src-pages-example-1-js-b7c13aa3bd5250620a63.js","sourcesContent":["import React from 'react';\nimport { Elements, StripeProvider } from \"react-stripe-elements-universal\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport CustomCheckoutForm from '../components/CustomCheckoutForm';\n\nclass MyStoreCheckout extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Example 1\" />\n        <StripeProvider apiKey=\"pk_test_5r9fnuslIznmQtNHSkRV3HQj00w1467fNY\">\n          <Elements>\n            <CustomCheckoutForm />\n          </Elements>\n        </StripeProvider>\n      </Layout>\n    );\n  }\n}\n\nexport default MyStoreCheckout;\n","// @Flow\n\nimport React from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { COLORS, UTILITIES } from '../Constants';\n\nconst StyledLabel = styled.label`\n  border-radius: ${props => props.theme.utilities.borderRadius};\n  border: solid 2px ${props => (props.checked ? props.theme.colors.primary : props.theme.colors.gray)};\n  cursor: pointer;\n  display: inline-block;\n  font-weight: ${props => (props.checked ? 'bold' : 'normal')};\n  padding: 5px;\n`;\n\nconst StyledInput = styled.input`\n  margin-right: 5px;\n`;\n\ntype CheckboxProps = {\n  checked: boolean,\n  disabled: boolean,\n  name: string, // Adding this because formiK requires name or id.\n  onChange: Function,\n  theme?: { colors: {}, utilities: {}},\n  value: string,\n};\n\nconst Checkbox = (props: CheckboxProps) => {\n  const theme = {\n    colors: {\n      ...COLORS,\n      ...props.theme.colors,\n    },\n    utilities: {\n      ...UTILITIES,\n      ...props.theme.utilities,\n    },\n  };\n\n  return (\n    <StyledLabel checked={props.checked} theme={theme}>\n      <StyledInput\n        checked={props.checked}\n        disabled={props.disabled}\n        name={props.name}\n        onChange={props.onChange}\n        type=\"checkbox\"\n        value={props.value}\n      />\n      {props.children || props.value}\n    </StyledLabel>\n  );\n};\n\nCheckbox.defaultProps = {\n  theme: {},\n};\n\nexport default withTheme(Checkbox);\n","// @Flow\n\nimport React from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { COLORS, UTILITIES } from '../Constants';\n\nconst StyledLabel = styled.label`\n  border-radius: ${props => props.theme.utilities.borderRadius};\n  border: solid 2px ${props => (props.checked ? props.theme.colors.primary : props.theme.colors.gray)};\n  cursor: pointer;\n  display: block;\n  font-weight: ${props => (props.checked ? 'bold' : 'normal')};\n  padding: 5px;\n`;\n\nconst StyledInput = styled.input`\n  margin-right: 5px;\n`;\n\ntype RadioProps = {\n  checked: boolean,\n  disabled: boolean,\n  name: string,\n  onChange: Function,\n  theme?: { colors: {}, utilities: {}},\n  value: string,\n};\n\nconst Radio = (props: RadioProps) => {\n  const theme = {\n    colors: {\n      ...COLORS,\n      ...props.theme.colors,\n    },\n    utilities: {\n      ...UTILITIES,\n      ...props.theme.utilities,\n    },\n  };\n\n  return (\n    <StyledLabel checked={props.checked} theme={theme}>\n      <StyledInput\n        checked={props.checked}\n        disabled={props.disabled}\n        onChange={props.onChange}\n        name={props.name}\n        type=\"radio\"\n        value={props.value}\n      />\n      {props.children || props.value}\n    </StyledLabel>\n  );\n};\n\nRadio.defaultProps = {\n  theme: {},\n};\n\nexport default withTheme(Radio);\n","import React from \"react\";\nimport { CardElement, injectStripe } from \"react-stripe-elements-universal\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\n\nimport Box from \"../components/UI/Box/Box\";\nimport Button from \"../components/UI/Button/Button\";\nimport Checkbox from \"../components/UI/Checkbox/Checkbox\";\nimport Radio from \"../components/UI/Radio/Radio\";\nimport TextField from \"../components/UI/TextField/TextField\";\nimport su2cTheme from \"../components/UI/themes/su2c\";\nimport Label from \"../components/UI/Label\";\n\nconst SignupSchema = Yup.object().shape({\n  donationAmount: Yup.string().required(\"Required\"),\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\")\n});\n\nconst StyledCardElement = styled(CardElement)`\n  background-color: #fff;\n  background-image: none;\n  border-radius: 3px;\n  border: solid 2px #c8c9c7;\n  color: #333;\n  display: block;\n  font-size: 1rem;\n  padding: 6px 8px;\n  width: 100%;\n`;\n\nconst StyledFieldset = styled.fieldset`\n  border: 0;\n  margin: 20px;\n  padding: 0 0 20px;\n  display: block;\n  border-bottom: 1px solid grey;\n`;\n\nconst StyledLegend = styled.legend`\n  display: block;\n  font-size: 22px;\n  font-family: MuseoSans-500, Calibri, Arial, sans-serif;\n`;\n\nclass CustomCheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    if (typeof window !== `undefined` && typeof window.Stripe !== `undefined`) {\n      this.stripe = window.Stripe(`my_key`, {\n        betas: [\"payment_intent_beta_3\"]\n      });\n    }\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { paymentIntent, error } = await this.stripe.handleCardPayment(\n      `a client_secret`,\n      this.StripeCardElement\n    );\n    // .then(...and so on)\n  }\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          donationAmount: \"\",\n          firstName: \"\",\n          giftAid: \"\",\n          paymentType: \"\",\n          lastName: \"\",\n          email: \"\"\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={values => {\n          // same shape as initial values\n\n          this.props.stripe.createToken({ name: values.email }).then(res => {\n            fetch(\"https://ornovia.com/payment\", {\n              credentials: \"same-origin\",\n              mode: \"cors\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              method: \"POST\",\n              body: JSON.stringify({\n                token: res.token.id,\n                amount: values.donationAmount * 100\n              })\n            })\n              .then(response => {\n                if (response.ok) return response.json();\n                throw new Error(\"Something went wrong ...\");\n              })\n              .then(data => alert(JSON.stringify(data)));\n          });\n          console.log(values);\n        }}\n      >\n        {({\n          errors,\n          touched,\n          values,\n          handleChange,\n          handleSubmit,\n          setFieldValue\n        }) => (\n          <Form>\n            <StyledFieldset>\n              <StyledLegend>Donation amount</StyledLegend>\n              <div>\n                <Button\n                  type=\"button\"\n                  appearance={\n                    values.donationAmount === 20 ? \"primary\" : \"defailt\"\n                  }\n                  onClick={() => setFieldValue(\"donationAmount\", 20)}\n                >\n                  £20\n                </Button>\n                <Button\n                  type=\"button\"\n                  appearance={\n                    values.donationAmount === 50 ? \"primary\" : \"defailt\"\n                  }\n                  onClick={() => setFieldValue(\"donationAmount\", 50)}\n                >\n                  £50\n                </Button>\n                <Button\n                  type=\"button\"\n                  appearance={\n                    values.donationAmount === 100 ? \"primary\" : \"defailt\"\n                  }\n                  onClick={() => setFieldValue(\"donationAmount\", 100)}\n                >\n                  £100\n                </Button>\n              </div>\n              <TextField\n                label=\"Other amount\"\n                extraLeft=\"£\"\n                name=\"donationAmount\"\n                onChange={handleChange}\n                value={values.donationAmount}\n                error={errors.donationAmount}\n                type=\"number\"\n              />\n            </StyledFieldset>\n            <StyledFieldset>\n              <StyledLegend>Gift Aid</StyledLegend>\n              <p>\n                With Gift Aid, your donation of £20.00 would be worth £25.00 at\n                no extra cost to you.\n              </p>\n              <Checkbox\n                name=\"giftAid\"\n                value={values.giftAid}\n                onChange={handleChange}\n              >\n                Yes I would like Cancer Research UK to claim Gift Aid on my\n                donation\n              </Checkbox>\n            </StyledFieldset>\n            <StyledFieldset>\n              <StyledLegend>Your details</StyledLegend>\n              <TextField\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                value={values.firstName}\n                error={errors.firstName}\n              />\n              <TextField\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                value={values.lastName}\n                error={errors.lastName}\n              />\n              <TextField\n                label=\"Email address\"\n                name=\"email\"\n                onChange={handleChange}\n                value={values.email}\n                error={errors.email}\n              />\n              <TextField\n                label=\"Phone number\"\n                name=\"phone\"\n                onChange={handleChange}\n                value={values.phone}\n                error={errors.phone}\n              />\n            </StyledFieldset>\n            <StyledFieldset>\n              <StyledLegend>How would you like to donate?</StyledLegend>\n              <div>\n                <Radio\n                  name=\"paymentType\"\n                  onChange={() => setFieldValue(\"paymentType\", \"card\")}\n                  value=\"Credit/Debit card\"\n                  checked={values.paymentType === \"card\"}\n                />\n                <Radio\n                  name=\"paymentType\"\n                  onChange={() => setFieldValue(\"paymentType\", \"payPal\")}\n                  value=\"PayPal\"\n                  checked={values.paymentType === \"payPal\"}\n                />\n              </div>\n              {values.paymentType === \"payPal\" && (\n                <Button\n                  type=\"button\"\n                  appearance=\"primary\"\n                  onClick={() => alert(\"Sorry not yet\")}\n                >\n                  Paypal\n                </Button>\n              )}\n              {values.paymentType === \"card\" && (\n                <>\n                  <Label>\n                    Card details\n                    <StyledCardElement\n                      ref={thisCardElement => {\n                        this.StripeCardElement = thisCardElement;\n                      }}\n                    />\n                  </Label>\n                  <Button\n                    type=\"submit\"\n                    appearance=\"primary\"\n                    onClick={handleSubmit}\n                  >\n                    Donate Now!\n                  </Button>\n                </>\n              )}\n            </StyledFieldset>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default injectStripe(CustomCheckoutForm);\n//export default CustomCheckoutForm;\n"],"sourceRoot":""}