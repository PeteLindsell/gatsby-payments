{"version":3,"sources":["webpack:///./src/pages/example-1.js","webpack:///./src/components/CustomCheckoutForm.js"],"names":["MyStoreCheckout","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","react_stripe_elements_universal__WEBPACK_IMPORTED_MODULE_1__","apiKey","_components_CustomCheckoutForm__WEBPACK_IMPORTED_MODULE_4__","React","Component","SignupSchema","Yup","shape","firstName","min","max","required","lastName","email","StyledCardElement","styled","CardElement","withConfig","displayName","componentId","CustomCheckoutForm","props","_React$Component","call","this","componentDidMount","window","Stripe","stripe","betas","handleSubmit","_callee","event","_ref","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","wrap","_context","prev","next","preventDefault","handleCardPayment","StripeCardElement","sent","paymentIntent","error","stop","_this","react__WEBPACK_IMPORTED_MODULE_6___default","formik__WEBPACK_IMPORTED_MODULE_8__","initialValues","donationAmount","validationSchema","onSubmit","values","console","log","_ref2","errors","touched","handleChange","setFieldValue","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_12__","type","appearance","onClick","_components_UI_TextField_TextField__WEBPACK_IMPORTED_MODULE_13__","label","extraLeft","name","onChange","value","_components_UI_Label__WEBPACK_IMPORTED_MODULE_15__","ref","thisCardElement","injectStripe"],"mappings":"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","file":"component---src-pages-example-1-js-f7be612f26b086b9f534.js","sourcesContent":["import React from 'react';\nimport { Elements, StripeProvider } from \"react-stripe-elements-universal\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport CustomCheckoutForm from '../components/CustomCheckoutForm';\n\nclass MyStoreCheckout extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Example 1\" />\n        <StripeProvider apiKey=\"pk_test_5r9fnuslIznmQtNHSkRV3HQj00w1467fNY\">\n          <Elements>\n            <CustomCheckoutForm />\n          </Elements>\n        </StripeProvider>\n      </Layout>\n    );\n  }\n}\n\nexport default MyStoreCheckout;\n","import React from 'react'\nimport { CardElement, injectStripe } from 'react-stripe-elements-universal'\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\"\n\nimport Box from \"../components/UI/Box/Box\";\nimport Button from \"../components/UI/Button/Button\";\nimport TextField from \"../components/UI/TextField/TextField\";\nimport su2cTheme from '../components/UI/themes/su2c';\nimport Label from \"../components/UI/Label\"\n\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\")\n});\n\nconst StyledCardElement = styled(CardElement)`\n  background-color: #fff;\n  background-image: none;\n  border-radius: 3px;\n  border: solid 2px #c8c9c7;\n  color: #333;\n  display: block;\n  font-size: 1rem;\n  padding: 6px 8px;\n  width: 100%;\n`;\n\nclass CustomCheckoutForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\tcomponentDidMount() {\n\t\tif((typeof window !== `undefined`) && (typeof window.Stripe !== `undefined`)) {\n\t\t\tthis.stripe = window.Stripe(`my_key`, {\n\t\t\t\tbetas: ['payment_intent_beta_3']\n\t\t\t})\n\t\t}\n\t}\n\tasync handleSubmit(event) {\n\t\tevent.preventDefault()\n\t\tconst { paymentIntent, error } = await this.stripe.handleCardPayment(\n\t \t\t`a client_secret`,\n\t\t\tthis.StripeCardElement\n    )\n    // .then(...and so on)\n\t}\n\trender() {\n\t\treturn (\n      <Formik\n        initialValues={{\n          donationAmount: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\"\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={values => {\n          // same shape as initial values\n          console.log(values);\n        }}\n      >\n        {({ errors, touched, values, handleChange, handleSubmit, setFieldValue }) => (\n          <Form>\n            <div>\n              <Button\n                type=\"button\"\n                appearance={values.donationAmount === 20 ? \"primary\" : \"defailt\"}\n                onClick={() => setFieldValue(\"donationAmount\", 20)}\n              >\n                £20\n              </Button>\n              <Button\n                type=\"button\"\n                appearance={values.donationAmount === 50 ? \"primary\" : \"defailt\"}\n                onClick={() => setFieldValue(\"donationAmount\", 50)}\n              >\n                £50\n              </Button>\n              <Button\n                type=\"button\"\n                appearance={values.donationAmount === 100 ? \"primary\" : \"defailt\"}\n                onClick={() => setFieldValue(\"donationAmount\", 100)}\n              >\n                £100\n              </Button>\n            </div>\n            <TextField\n              label=\"Donation amount\"\n              extraLeft=\"£\"\n              name=\"donationAmount\"\n              onChange={handleChange}\n              value={values.donationAmount}\n              error={errors.donationAmount}\n              type=\"number\"\n            />\n            <TextField\n              label=\"First name\"\n              name=\"firstName\"\n              onChange={handleChange}\n              value={values.firstName}\n              error={errors.firstName}\n            />\n            <TextField\n              label=\"Last name\"\n              name=\"lastName\"\n              onChange={handleChange}\n              value={values.lastName}\n              error={errors.lastName}\n            />\n            <Label>Card details\n              <StyledCardElement ref={(thisCardElement) => {this.StripeCardElement = thisCardElement}} />\n            </Label>\n            <Button type=\"submit\" appearance=\"primary\" onClick={handleSubmit}>\n              Donate Now!\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    )\n\t}\n}\n\nexport default injectStripe(CustomCheckoutForm);\n//export default CustomCheckoutForm;\n"],"sourceRoot":""}